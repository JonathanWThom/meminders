name: CI

env:
  REGISTRY: "registry.digitalocean.com/jonathanwthom"
  IMAGE_NAME: "meminders"

on:
  push:
    branches: [ main ]

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15
  
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v2.5.1

    - name: Test
      run: go test -v ./...

  build_and_push:
    runs-on: ubuntu-latest
    needs: lint_and_test

    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v0.1.3
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          KEY: ${{ secrets.SSHKEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
          envs: IMAGE_NAME,REGISTRY
            TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          script: |
            # log in to doctl registry.. again
            # not quite working, not getting token
            doctl registry login --expiry-seconds 600 -t $(echo $TOKEN)

            # Stop running container
            docker stop $(echo $IMAGE_NAME)

            # Remove old container
            docker rm $(echo $IMAGE_NAME)

            # Run a new container from a new image
            docker run -d \
            --restart always \
            --env-file .env.production \
            --name $(echo $IMAGE_NAME) \
            $(echo $REGISTRY)/$(echo $IMAGE_NAME)
